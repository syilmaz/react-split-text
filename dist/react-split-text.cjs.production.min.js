'use strict';
Object.defineProperty(exports, '__esModule', { value: !0 });
var e,
  t = require('react'),
  r = (e = t) && 'object' == typeof e && 'default' in e ? e.default : e;
function n(e, t) {
  (null == t || t > e.length) && (t = e.length);
  for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];
  return n;
}
var o = function(e) {
    return r.createElement('div', null, e.children);
  },
  i = function(e) {
    return r.createElement(
      'span',
      { style: { whiteSpace: 'pre' } },
      e.children
    );
  },
  u = function(e) {
    return r.createElement('span', null, e.children);
  },
  a = t.memo(o),
  l = t.memo(i),
  c = t.memo(u),
  f = t.forwardRef(function(e, o) {
    var i = e.className,
      u = e.style,
      f = e.LineWrapper,
      s = void 0 === f ? a : f,
      p = e.WordWrapper,
      d = void 0 === p ? l : p,
      m = e.LetterWrapper,
      v = void 0 === m ? c : m,
      h = e.extraProps,
      y = '';
    r.Children.map(e.children, function(e) {
      if ('string' != typeof e && 'number' != typeof e)
        throw new Error('SplitText expect a text as children');
      y += String(e);
    });
    var g = t.useRef(null),
      x = t.useState([]),
      b = x[0],
      E = x[1],
      w = t.useRef(0);
    t.useLayoutEffect(
      function() {
        return (function() {
          var e = g.current;
          if (e) {
            if (b.length > 0)
              return (function(e, t) {
                for (
                  var r,
                    o =
                      w.current ||
                      e
                        .map(function(e) {
                          return e.length;
                        })
                        .sort(function(e, t) {
                          return t - e;
                        })[0],
                    i = [],
                    u = '',
                    a = 0,
                    l = (function(e, t) {
                      var r;
                      if (
                        'undefined' == typeof Symbol ||
                        null == e[Symbol.iterator]
                      ) {
                        if (
                          Array.isArray(e) ||
                          (r = (function(e, t) {
                            if (e) {
                              if ('string' == typeof e) return n(e, void 0);
                              var r = Object.prototype.toString
                                .call(e)
                                .slice(8, -1);
                              return (
                                'Object' === r &&
                                  e.constructor &&
                                  (r = e.constructor.name),
                                'Map' === r || 'Set' === r
                                  ? Array.from(e)
                                  : 'Arguments' === r ||
                                    /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(
                                      r
                                    )
                                  ? n(e, void 0)
                                  : void 0
                              );
                            }
                          })(e))
                        ) {
                          r && (e = r);
                          var o = 0;
                          return function() {
                            return o >= e.length
                              ? { done: !0 }
                              : { done: !1, value: e[o++] };
                          };
                        }
                        throw new TypeError(
                          'Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
                        );
                      }
                      return (r = e[Symbol.iterator]()).next.bind(r);
                    })(t.split(' ').entries());
                  !(r = l()).done;

                ) {
                  var c = r.value[1];
                  (a += c.length + 1) > o + 1 && (i.push(u), (u = ''), (a = 0)),
                    (u += c.trim() + ' ');
                }
                i.push(u),
                  E(
                    i.map(function(e) {
                      return e.trim();
                    })
                  ),
                  o > w.current && (w.current = o);
              })(b, y);
            for (
              var t, r = [], o = [], i = 0, u = Array.from(e.children);
              i < u.length;
              i++
            ) {
              var a = u[i],
                l = a.getBoundingClientRect().top;
              null == t && (t = l),
                l !== t && (r.push(o.join(' ')), (o = [])),
                (t = l),
                o.push((a.textContent || '').trim());
            }
            r.push(o.join(' ')), E(r);
          }
        })();
      },
      [y]
    );
    var L = 0,
      S = 0;
    if (b.length) {
      var I = b.length,
        W = b.reduce(function(e, t) {
          return e + t.split(' ').length;
        }, 0),
        j = b.reduce(function(e, t) {
          var r = t.split(' ');
          return (
            e +
            (r = r.map(function(e, t) {
              return t === r.length - 1 ? e : e + ' ';
            })).reduce(function(e, t) {
              return e + t.length;
            }, 0)
          );
        }, 0);
      return (
        console.log(
          'Line Total: ' +
            b.length +
            ', Words Total: ' +
            W +
            ', Letter Total: ' +
            j
        ),
        r.createElement(
          'div',
          {
            className: i,
            ref: function(e) {
              (g.current = e),
                'function' == typeof o ? o(e) : o && (o.current = e);
            },
            style: u,
          },
          b.map(function(e, t) {
            var n = e.split(' ');
            return (
              (n = n.map(function(e, t) {
                return t === n.length - 1 ? e : e + ' ';
              })),
              r.createElement(
                s,
                { key: t, lineIndex: t, totalLines: I, extraProps: h },
                n.map(function(e, n) {
                  var o = e.split('');
                  return r.createElement(
                    d,
                    {
                      key: n,
                      lineIndex: t,
                      totalLines: I,
                      wordIndex: n,
                      totalWords: W,
                      countIndex: L++,
                      extraProps: h,
                    },
                    o.map(function(e, o) {
                      return r.createElement(
                        v,
                        {
                          key: o,
                          lineIndex: t,
                          totalLines: I,
                          wordIndex: n,
                          totalWords: W,
                          letterIndex: o,
                          totalLetters: j,
                          countIndex: S++,
                          extraProps: h,
                        },
                        e
                      );
                    })
                  );
                })
              )
            );
          })
        )
      );
    }
    return r.createElement(
      'div',
      { className: i, ref: g, style: u },
      y.split(' ').map(function(e, t) {
        return r.createElement('span', { key: t }, e, ' ');
      })
    );
  }),
  s = t.forwardRef(function(e, n) {
    var o,
      i,
      u,
      a = e.children,
      l = (function(e, t) {
        if (null == e) return {};
        var r,
          n,
          o = {},
          i = Object.keys(e);
        for (n = 0; n < i.length; n++)
          t.indexOf((r = i[n])) >= 0 || (o[r] = e[r]);
        return o;
      })(e, ['children']),
      c = t.useState(0),
      s = c[0],
      p = c[1],
      d =
        ((o = function() {
          return p(function(e) {
            return e + 1;
          });
        }),
        void 0 === i && (i = !1),
        function() {
          for (
            var e = this, t = arguments.length, r = new Array(t), n = 0;
            n < t;
            n++
          )
            r[n] = arguments[n];
          var a = i && !u,
            l = function() {
              return o.apply(e, r);
            };
          clearTimeout(u), (u = setTimeout(l, 300)), a && l();
        });
    return (
      t.useEffect(function() {
        return (
          window.addEventListener('resize', d),
          function() {
            return window.removeEventListener('resize', d);
          }
        );
      }, []),
      r.createElement(f, Object.assign({ key: s }, l, { ref: n }), a)
    );
  });
(exports.LetterWrapper = u),
  (exports.LineWrapper = o),
  (exports.SplitText = s),
  (exports.WordWrapper = i);
//# sourceMappingURL=react-split-text.cjs.production.min.js.map
